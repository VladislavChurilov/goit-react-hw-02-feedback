{"version":3,"sources":["components/Feedback.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onIncr","map","option","className","styles","feedbackOptions","type","onClick","Statistics","good","neutral","bad","total","percentege","title","counter","Section","children","feedback","Notification","message","App","state","handleIncrement","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,gBAAkB,kCAAkC,QAAU,4B,wKCoBvIC,EAlBS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,OAAX,OACrB,8BACED,EAAQE,KAAI,SAACC,GAAD,OACT,wBAEAC,UAAWC,IAAOC,gBAClBC,KAAK,SACLC,QAAS,kBAAIP,EAAOE,IAJpB,SAKCA,GAJIA,SCeEM,EAnBI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,WAA7B,OACf,gCACI,mBAAGV,UAAWC,IAAOU,MAArB,wBACJ,uBAAMX,UAAWC,IAAOW,QAAxB,mBAAyCN,EAAzC,OACA,uBAAMN,UAAWC,IAAOW,QAAxB,sBAA4CL,EAA5C,OACA,uBAAMP,UAAWC,IAAOW,QAAxB,kBAAwCJ,KACxC,uBAAMR,UAAWC,IAAOW,QAAxB,oBAA0CH,KACzCC,EACD,uBAAMV,UAAWC,IAAOW,QAAxB,yBAA+CF,EAA/C,OACC,sBAAMV,UAAWC,IAAOW,QAAxB,8BCCUC,EAVC,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUH,EAAZ,EAAYA,MAAZ,OACR,sBAAKX,UAAWC,IAAOc,SAAvB,UACA,mBAAGf,UAAWC,IAAOU,MAArB,SAA8BA,IAC7BG,MCKME,EARK,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAChB,mBAAGjB,UAAWC,IAAOU,MAArB,SAA8BM,KC0CnBC,E,4MAtCXC,MAAQ,CACJb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETY,gBAAkB,SAAArB,GACd,EAAKsB,UAAS,SAAAC,GAAS,sBAClBvB,EAASuB,EAAUvB,GAAU,O,4CAItC,WAAS,IACEO,EAAQiB,KAAKJ,MAAbb,KACAC,EAAWgB,KAAKJ,MAAhBZ,QACAC,EAAOe,KAAKJ,MAAZX,IACDgB,EAAqBlB,EAAKC,EAAQC,EAClCiB,EAAkCC,KAAKC,MAAMrB,EAAKkB,EAAmB,KACrE5B,EAAUgC,OAAOC,KAAKN,KAAKJ,OACjC,OACA,eAAC,EAAD,CAASR,MAAM,wBAAf,UACA,cAAC,EAAD,CAAiBf,QAASA,EAASC,OAAQ0B,KAAKH,kBAE/CI,EACD,cAAC,EAAD,CACClB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EAELC,MAAOe,EACPd,WAAae,IAEZ,cAAC,EAAD,CAAcR,QAAQ,6B,GAhCda,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e1104cf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__2AizJ\",\"title\":\"Feedback_title__24kf5\",\"feedbackOptions\":\"Feedback_feedbackOptions__MIfdF\",\"counter\":\"Feedback_counter__3AD6e\"};","import styles from '../Feedback.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({options, onIncr}) => (\r\n   <div>\r\n    {options.map((option) =>(           \r\n        <button \r\n        key={option} \r\n        className={styles.feedbackOptions} \r\n        type=\"button\" \r\n        onClick={()=>onIncr(option)}>\r\n        {option}\r\n        </button>           \r\n        ))}\r\n    </div>     \r\n)\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onIncr: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default FeedbackOptions;","import styles from '../Feedback.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({good, neutral, bad, total, percentege}) => (\r\n    <div>\r\n        <p className={styles.title} >Statistics</p>\r\n    <span className={styles.counter} >Good: {good} </span>\r\n    <span className={styles.counter} >Neutral: {neutral} </span>\r\n    <span className={styles.counter} >Bad: {bad}</span>\r\n    <span className={styles.counter} >Total: {total}</span>\r\n    {percentege ? \r\n    <span className={styles.counter} >Percentage: {percentege}%</span>\r\n    :<span className={styles.counter} >Percentage: </span>}\r\n    </div>\r\n)\r\nStatistics.propTypes = {\r\n    good:PropTypes.number.isRequired,\r\n    neutral:PropTypes.number.isRequired,\r\n    bad:PropTypes.number.isRequired,\r\n    total:PropTypes.number.isRequired,\r\n    percentege:PropTypes.number.isRequired\r\n}\r\nexport default Statistics;\r\n\r\n","import styles from '../Feedback.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({children ,title}) =>(    \r\n        <div className={styles.feedback} >\r\n        <p className={styles.title} >{title}</p>\r\n        {children}        \r\n        </div> \r\n)\r\nSection.propTypes = {\r\n        title: PropTypes.string.isRequired\r\n    };\r\n    \r\nexport default Section;","import styles from '../Feedback.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification =({message}) =>(\r\n    <p className={styles.title} >{message}</p>\r\n)\r\n\r\nNotification.propTypes = {\r\n    message:PropTypes.string.isRequired    \r\n}\r\n\r\nexport default Notification;","import { Component } from 'react';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Statistics from './components/Statistics';\r\nimport Section from './components/Section';\r\nimport Notification from './components/Notification';\r\n\r\n\r\nclass App extends Component{    \r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n    handleIncrement = option => {\r\n        this.setState(prevState => ({\r\n            [option]: prevState[option] + 1,\r\n        }));    \r\n    }      \r\n    \r\n    render(){\r\n        const {good} = this.state;\r\n        const {neutral} = this.state;\r\n        const {bad} = this.state;\r\n        const countTotalFeedback = good+neutral+bad;        \r\n        const countPositiveFeedbackPercentage = Math.round(good/countTotalFeedback*100);\r\n        const options = Object.keys(this.state);\r\n        return(        \r\n        <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions options={options} onIncr={this.handleIncrement}         \r\n        />\r\n        {countTotalFeedback?\r\n        <Statistics\r\n         good={good} \r\n         neutral={neutral} \r\n         bad={bad} \r\n        //  name=\"good\"\r\n         total={countTotalFeedback} \r\n         percentege ={countPositiveFeedbackPercentage} >             \r\n         </Statistics>\r\n         :<Notification message=\"No feedback given\"/>\r\n        }\r\n        </Section>    \r\n    )}\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}